# --------- Builder Stage ---------
FROM ghcr.io/astral-sh/uv:python3.11-alpine AS builder

# Set environment variables for uv
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

WORKDIR /app

# Install Alpine build dependencies required for native wheels (psutil, etc.)
RUN apk add --no-cache \
    gcc \
    musl-dev \
    python3-dev \
    linux-headers \
    git \
    ca-certificates

# Prepare virtualenv and install project with dev extras using pip-style extras
# Avoid `uv sync --group dev` since dependency-groups aren't defined in this repo
COPY pyproject.toml README.md /app/
RUN --mount=type=cache,target=/root/.cache/uv \
    uv venv .venv && \
    . .venv/bin/activate && \
    uv pip install -e '.[dev]'

# Copy the project source code
COPY . /app

# --------- Final Stage ---------
FROM python:3.11-alpine

# Create a non-root user for security
RUN addgroup -g 1000 app \
    && adduser -u 1000 -G app -s /bin/sh -D app

# Copy the virtual environment from the builder stage
COPY --from=builder --chown=app:app /app/.venv /app/.venv

# Ensure the virtual environment is in the PATH
ENV PATH="/app/.venv/bin:$PATH"

# Switch to the non-root user
USER app

# Set the working directory
WORKDIR /code

# Default command for testing
CMD ["pytest", "tests/", "-v"]
